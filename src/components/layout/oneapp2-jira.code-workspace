{
	"folders": [
		{
			"path": "../../.."
		}
	],
	"settings": {
		"mcp": {
			"servers": {
				"openapi-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"openapi-mcp-server",
						"-p",
						"8008:8000",
						"-e",
						"API_NAME=${input:apiName}",
						"-e",
						"API_BASE_URL=${input:apiBaseUrl}",
						"-e",
						"API_SPEC_URL=${input:apiSpecUrl}",
						"-e",
						"LOG_LEVEL=${input:fastmcpLogLevel}",
						"mcp-openapi-mcp-server:latest"
					],
					"type": "stdio"
				},
				"aws-serverless-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"-e",
						"AWS_ACCESS_KEY_ID=${input:aws_access_key}",
						"-e",
						"AWS_SECRET_ACCESS_KEY=${input:aws_secret_key}",
						"-e",
						"AWS_REGION=${input:aws_region}",
						"--name",
						"aws-serverless-mcp-server",
						"-p",
						"8010:8080",
						"mcp-aws-serverless-mcp-server:latest"
					],
					"type": "stdio"
				},
				"cloudwatch-logs-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"cloudwatch-logs-mcp-server",
						"-p",
						"8001:8000",
						"-e",
						"AWS_ACCESS_KEY_ID=${input:aws_access_key}",
						"-e",
						"AWS_SECRET_ACCESS_KEY=${input:aws_secret_key}",
						"-e",
						"AWS_REGION=${input:aws_region}",
						"-e",
						"LOG_LEVEL=${input:fastmcpLogLevel}",
						"mcp-cloudwatch-logs-mcp-server:latest",
						"--transport",
						"stdio"
					],
					"type": "stdio"
				},
				"cost-analysis-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"cost-analysis-mcp-server",
						"-p",
						"8002:8000",
						"-e",
						"LOG_LEVEL=${input:fastmcpLogLevel}",
						"mcp-cost-analysis-mcp-server:latest"
					],
					"type": "stdio"
				},
				"cost-explorer-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"cost-explorer-mcp-server",
						"-p",
						"8003:8000",
						"-e",
						"AWS_ACCESS_KEY_ID=${input:aws_access_key}",
						"-e",
						"AWS_SECRET_ACCESS_KEY=${input:aws_secret_key}",
						"-e",
						"AWS_REGION=${input:aws_region}",
						"-e",
						"LOG_LEVEL=${input:fastmcpLogLevel}",
						"mcp-cost-explorer-mcp-server:latest"
					],
					"type": "stdio"
				},
				"elasticache-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"elasticache-mcp-server",
						"-p",
						"8004:8000",
						"-e",
						"LOG_LEVEL=${input:fastmcpLogLevel}",
						"mcp-elasticache-mcp-server:latest"
					],
					"type": "stdio"
				},
				"frontend-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"frontend-mcp-server",
						"-p",
						"8005:8000",
						"mcp-frontend-mcp-server:latest"
					],
					"type": "stdio"
				},
				"git-repo-research-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"git-repo-research-mcp-server",
						"-p",
						"8006:8000",
						"mcp-git-repo-research-mcp-server:latest"
					],
					"type": "stdio"
				},
				"iam-mcp-server": {
					"command": "docker",
					"args": [
						"run",
						"-i",
						"--rm",
						"--name",
						"iam-mcp-server",
						"-p",
						"8007:8000",
						"mcp-iam-mcp-server:latest"
					],
					"type": "stdio"
				}
			},
			"inputs": [
				{
					"type": "promptString",
					"id": "aws_access_key",
					"description": "AWS Access Key ID",
					"password": true
				},
				{
					"type": "promptString",
					"id": "aws_secret_key",
					"description": "AWS Secret Access Key",
					"password": true
				},
				{
					"type": "promptString",
					"id": "aws_region",
					"description": "AWS Region"
				},
				{
					"type": "promptString",
					"id": "apiName",
					"description": "API name for OpenAPI MCP server"
				},
				{
					"type": "promptString",
					"id": "apiBaseUrl",
					"description": "API base URL for OpenAPI MCP server"
				},
				{
					"type": "promptString",
					"id": "apiSpecUrl",
					"description": "OpenAPI spec URL for OpenAPI MCP server",
					"default": "https://petstore3.swagger.io/api/v3/openapi.json"
				},
				{
					"type": "promptString",
					"id": "resourceArn",
					"description": "Resource ARN for Postgres MCP server"
				},
				{
					"type": "promptString",
					"id": "secretArn",
					"description": "Secret ARN for Postgres MCP server"
				},
				{
					"type": "promptString",
					"id": "db_name",
					"description": "Database name for Postgres MCP server"
				},
				{
					"type": "promptString",
					"id": "region",
					"description": "AWS region for Postgres MCP server"
				},
				{
					"type": "promptString",
					"id": "readonly",
					"description": "Read-only mode for Postgres MCP server (true/false)"
				},
				{
					"type": "promptString",
					"id": "fastmcpLogLevel",
					"description": "Logging level for FASTMCP (e.g. ERROR, WARN, INFO)"
				}
			]
		},
		"deno.path": "/Users/moyarzun/Library/Preferences/netlify/deno-cli/deno"
	}
}